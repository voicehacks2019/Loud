[
    {
        "id": "d6d146c0.efe12",
        "type": "tab",
        "label": "VB_level1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d0659df5.5ab35",
        "type": "console",
        "z": "d6d146c0.efe12",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1190,
        "y": 180,
        "wires": []
    },
    {
        "id": "45f77507.320574",
        "type": "algoliasearch",
        "z": "d6d146c0.efe12",
        "API_ID": "D9PF8871WM",
        "API_Key": "a46f182ce5289286acd355344ef6e257",
        "Index": "vblevel1",
        "name": "Search",
        "x": 1020,
        "y": 180,
        "wires": [
            [
                "d0659df5.5ab35",
                "85c9d414.bddfa8"
            ]
        ]
    },
    {
        "id": "85e9699a.efd528",
        "type": "http response",
        "z": "d6d146c0.efe12",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1190,
        "y": 280,
        "wires": []
    },
    {
        "id": "b946a758.8be3e",
        "type": "http in",
        "z": "d6d146c0.efe12",
        "name": "",
        "url": "/vb_level1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "5d35f261.8557bc"
            ]
        ]
    },
    {
        "id": "81ebf4e6.15088",
        "type": "console",
        "z": "d6d146c0.efe12",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 450,
        "y": 440,
        "wires": []
    },
    {
        "id": "5d35f261.8557bc",
        "type": "change",
        "z": "d6d146c0.efe12",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "query",
                "pt": "msg",
                "to": "payload.query",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 380,
        "wires": [
            [
                "81ebf4e6.15088",
                "e776ffc3.c59778"
            ]
        ]
    },
    {
        "id": "85c9d414.bddfa8",
        "type": "function",
        "z": "d6d146c0.efe12",
        "name": "Default Answer",
        "func": "var require = context.global.get('require');\n//node.warn(msg);\nvar i = 0;\n//var response;\nvar response = [];\nvar possible_matches = msg.payload.hits;\n//node.warn(possible_matches);\n//i need to go through all the json objects and make a new object and put it in the array\nvar count = possible_matches.length;\n//node.warn(count);\nif(count >= 1){\n    for(var i =0; i < count; i++){\n        var regex = /<em>/gm;\n        var regex2 = /<\\/em>/gm;\n        var message = msg.payload.hits[i]._highlightResult.ANSWER.value;\n        //node.warn(message);\n        var question = msg.payload.hits[i]._highlightResult.QUESTION.value;\n        //node.warn(question);\n        message = message.replace(regex, \"\");\n        message = message.replace(regex2, \"\");\n        question = question.replace(regex, \"\");\n        question = question.replace(regex2, \"\");\n\n        match = {\n            \"intent\":\"nothing\", \n            \"message\":message,\n            \"question\":question\n        };\n        //node.warn(match);\n        response.push(match);\n        \n    }\n//     response={\n//     \"message\": \"At this time Jockey.com and Jockey Stores do not sell gift cards. \",\n//     \"question\": \"Can I purchase gift cards on Jockey.com or In a Jockey outlet Store?\"\n// };\n    //msg.payload = JSON.stringify(response);\n    response = {response};\n    //node.warn(response);\n    msg.payload = response;\n    //node.warn(msg.payload);\n}\nelse{\n    match = {\"message\":\"Sorry, I don't understand your question, but since it is a medical condition, let me get some help!\"};\n    response.push(match);\n    msg.payload = {response};\n}\n\nif (msg.query===\"\"){\n    //node.warn(\"String is empty\");\n    msg.payload = null;\n}\n// check_key=context.global.get('key');\n// node.warn(\"Before releasing key value \" +check_key);\n// context.global.set('key',true);\n// check_key=context.global.get('key');\n// node.warn(\"After releasing key value \" +check_key);\n\n// node.warn(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 980,
        "y": 280,
        "wires": [
            [
                "85e9699a.efd528",
                "8792ed73.acde78"
            ]
        ]
    },
    {
        "id": "37e5b962.1608b6",
        "type": "function",
        "z": "d6d146c0.efe12",
        "name": "End",
        "func": "var require = context.global.get('require'); \n// node.warn(msg);\n// msg.input_file='/interplay_v2/public/private/FAQ.csv';\n// var check_initialize = context.global.get(\"pythonspacyinit\");\n// if(check_initialize === undefined)\n// {   \n//     msg.doInit = 1;\n// }\n// else\n//     msg.doInit = 0;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 320,
        "wires": [
            [
                "df429d9c.a4f9f8",
                "c1d7c152.699a1"
            ]
        ]
    },
    {
        "id": "df429d9c.a4f9f8",
        "type": "console",
        "z": "d6d146c0.efe12",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 370,
        "y": 320,
        "wires": []
    },
    {
        "id": "f77f08d5.4e95d",
        "type": "function",
        "z": "d6d146c0.efe12",
        "name": "payload modification",
        "func": "var require = context.global.get('require'); \n// node.warn(msg);\n// var check_initialize = context.global.get(\"pythonspacyinit\");\n// if(check_initialize === undefined)\n// {\n//     context.global.set('pythonspacyinit',1);\n// }\n// msg.topic=JSON.parse(msg.payload)\n// msg.topic=\"Can I purchase gift cards on Jockey.com or In a Jockey outlet Store?\";\nmsg.topic=msg.algolia_query;\n// node.warn(\"this is the topic \"+msg.topic)\n// node.warn(msg);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 180,
        "wires": [
            [
                "45f77507.320574"
            ]
        ]
    },
    {
        "id": "d4e7f4ba.ccc7e8",
        "type": "delay",
        "z": "d6d146c0.efe12",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 660,
        "y": 480,
        "wires": [
            [
                "e776ffc3.c59778"
            ]
        ]
    },
    {
        "id": "aece53cd.8224e",
        "type": "comment",
        "z": "d6d146c0.efe12",
        "name": "--------Delay for First Request---------",
        "info": "Create a 5 second delay for the first request to come in",
        "x": 630,
        "y": 540,
        "wires": []
    },
    {
        "id": "b69ea964.46c518",
        "type": "comment",
        "z": "d6d146c0.efe12",
        "name": "------------- NLP----------------",
        "info": "",
        "x": 440,
        "y": 120,
        "wires": []
    },
    {
        "id": "6d229a65.d00b34",
        "type": "comment",
        "z": "d6d146c0.efe12",
        "name": "------------Checking for Algolia Output-------------",
        "info": "",
        "x": 1060,
        "y": 120,
        "wires": []
    },
    {
        "id": "882c7894.6b1c2",
        "type": "comment",
        "z": "d6d146c0.efe12",
        "name": "--------Get Http Request-----------",
        "info": "",
        "x": 200,
        "y": 460,
        "wires": []
    },
    {
        "id": "4680edaf.ecb074",
        "type": "console",
        "z": "d6d146c0.efe12",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 570,
        "y": 300,
        "wires": []
    },
    {
        "id": "c1d7c152.699a1",
        "type": "function",
        "z": "d6d146c0.efe12",
        "name": "Set's ID",
        "func": "var require = context.global.get('require'); \nmsg.id=Math.random()*100;\nvar response=msg.res;\n// node.warn(\"Setting response ID to this \");\n// node.warn(\"res \"+msg.id);\ncontext.global.set(\"res\"+msg.id,response);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 180,
        "wires": [
            [
                "e03822d2.74c3b"
            ]
        ]
    },
    {
        "id": "8d67f10.4c5011",
        "type": "function",
        "z": "d6d146c0.efe12",
        "name": "Gets ID",
        "func": "var require = context.global.get('require'); \n\nvar response=context.global.get(\"res\"+msg.id);\n// node.warn(\"Getting ID from someone \");\n// node.warn(\"res \"+msg.id);\nmsg.res=response;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 240,
        "wires": [
            [
                "f77f08d5.4e95d",
                "4680edaf.ecb074"
            ]
        ]
    },
    {
        "id": "e03822d2.74c3b",
        "type": "FAQ",
        "z": "d6d146c0.efe12",
        "name": "Bra_support_FAQ",
        "i_filename": "/interplay_v2/public/private/voicehacks_level1.csv",
        "tuning_paramter1": ".5",
        "tuning_paramter2": "0.45",
        "tuning_paramter3": "0.49",
        "func": "\nreturn msg",
        "outputs": 1,
        "x": 350,
        "y": 180,
        "wires": [
            [
                "8d67f10.4c5011"
            ]
        ]
    },
    {
        "id": "5fb9dccd.b13fcc",
        "type": "console",
        "z": "d6d146c0.efe12",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1450,
        "y": 340,
        "wires": []
    },
    {
        "id": "284902e2.2ffd5e",
        "type": "function",
        "z": "d6d146c0.efe12",
        "name": "modiefier for DB",
        "func": "var require = context.global.get('require'); \nvar qs;\nnode.warn(msg.payload.topic);\nif (/*(msg.payload.hits.length >0) && */(msg.req.query.write)){\n    // qs=msg.payload.hits[0]._highlightResult.QUESTION.value;\n    qs=msg.req.query.ques;\n}\nelse {\n    return [null,msg];\n}\nnode.warn(\"At line 10\"+msg.req.query.write);\nmsg.user_query=msg.req.query.query;\nmsg.query_shown=qs;\n\nnode.warn(\"USER QUERY \"+msg.user_query);\nnode.warn(\"QUERY SHOWN \"+msg.query_shown);\nvar db_obj={\n    'user_query':msg.user_query,\n    'query_shown':qs\n    };\n    \nmsg.obj=db_obj;\nreturn [msg,null];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 1340,
        "y": 140,
        "wires": [
            [
                "5f5575a8.0553d4",
                "d6ee60f5.27338"
            ],
            []
        ]
    },
    {
        "id": "5f5575a8.0553d4",
        "type": "console",
        "z": "d6d146c0.efe12",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1650,
        "y": 120,
        "wires": []
    },
    {
        "id": "e776ffc3.c59778",
        "type": "function",
        "z": "d6d146c0.efe12",
        "name": "Monitor Input/Output",
        "func": "var require = context.global.get('require'); \n// var check_initialize = context.global.get(\"pythonspacyinit\");\nvar check_initialize = global.get(\"pythonspacyinit\");\n\nif(check_initialize === undefined)\n{\n    return [null,msg,null,null];\n}\n\ntry {\n    msg.query=decodeURI(msg.query);\n    // expected output: \"https://mozilla.org/?x=шеллы\"\n    var numberPattern = /\\d+/g;\n    var num = msg.query.match( numberPattern );\n    //node.warn(num);\n    node.warn(num.length);\n    if(num.length>1){\n        for(var i = 0;i <num.length;i++){\n            if(num[i] >= 46){\n                return [null,null,null,msg];\n            }\n        }\n    }\n    else if(num.length == 1){\n        if(num[0] >= 46){\n            return [null,null,null,msg];\n        }\n    }\n} catch(e) { // catches a malformed URI\n  node.warn(e);\n}\n\nmsg.query=msg.query.trim();\nnode.warn(\"this is the msg.query\");\nnode.warn(msg.query);\nif(msg.query===\"\"){\n    msg.payload={};\n    return[null,null,msg,null];\n}\n\nreturn [msg,null,null,null];",
        "outputs": 4,
        "noerr": 0,
        "x": 680,
        "y": 380,
        "wires": [
            [
                "37e5b962.1608b6"
            ],
            [
                "d4e7f4ba.ccc7e8"
            ],
            [
                "431bd33b.50acc4"
            ],
            [
                "564f0b7d.4e7934",
                "dd856157.f88f1"
            ]
        ]
    },
    {
        "id": "d6ee60f5.27338",
        "type": "function",
        "z": "d6d146c0.efe12",
        "name": "MariaDB",
        "func": "var require = context.global.get('require'); \n\nvar mysql = require('mysql');\n\nvar con = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"jockey1234\",\n  database: \"bra_support\"\n});\n\n\n\n// con.end(function(err) {\n//   if (err) {\n//     return console.log('error:' + err.message);\n//   }\n//   console.log('Close the database connection.');\n// });\nqs=msg.req.query.ques;\nmsg.user_query=msg.req.query.query;\nmsg.query_shown=qs;\n\nvar regex = /<em>/gm;\nvar regex2 = /<\\/em>/gm;\n\n// var question = msg.query_shown.replace(regex, \"\");\n// var question2 = question.replace(regex2, \"\");\nnode.warn(\"Query shown \"+msg.query_shown);\nnode.warn(\"user query asked  \"+msg.user_query);\n\ncon.connect(function(err) {\n  if (err) throw err;\n  console.log(\"Connected!\");\n//   var sql = \"INSERT INTO questions (user_query, query_shown) VALUES ('how can i test this?', 'testing this query')\";\n  var sql = \"INSERT INTO questions (user_query, query_shown) VALUES (\"+mysql.escape(msg.obj.user_query)+\",\"+mysql.escape(msg.obj.query_shown)+\")\";\n  con.query(sql, function (err, result) {\n    if (err) throw err;\n    console.log(\"1 record inserted\");\n  });\n});\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1380,
        "y": 280,
        "wires": [
            [
                "5fb9dccd.b13fcc"
            ]
        ]
    },
    {
        "id": "4ddd7db4.9b0f6c",
        "type": "catch",
        "z": "d6d146c0.efe12",
        "name": "",
        "scope": null,
        "x": 980,
        "y": 520,
        "wires": [
            [
                "54f5e160.048b4"
            ]
        ]
    },
    {
        "id": "54f5e160.048b4",
        "type": "console",
        "z": "d6d146c0.efe12",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1190,
        "y": 520,
        "wires": []
    },
    {
        "id": "4807ebb6.ea2fe4",
        "type": "comment",
        "z": "d6d146c0.efe12",
        "name": "--------Error log---------",
        "info": "catch the error",
        "x": 1080,
        "y": 480,
        "wires": []
    },
    {
        "id": "431bd33b.50acc4",
        "type": "http response",
        "z": "d6d146c0.efe12",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 380,
        "wires": []
    },
    {
        "id": "564f0b7d.4e7934",
        "type": "console",
        "z": "d6d146c0.efe12",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 870,
        "y": 460,
        "wires": []
    },
    {
        "id": "bf3a584e.d257a8",
        "type": "http response",
        "z": "d6d146c0.efe12",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1110,
        "y": 420,
        "wires": []
    },
    {
        "id": "dd856157.f88f1",
        "type": "function",
        "z": "d6d146c0.efe12",
        "name": "Default Answer",
        "func": "var require = context.global.get('require');\n//node.warn(msg);\nvar response = [];\nmatch = {\"message\":\"Based on our current assortment, I don't think our Jockey Forever Fit Bras would meet your fit expectations.\"};\nresponse.push(match);\nmsg.payload = {response};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 420,
        "wires": [
            [
                "bf3a584e.d257a8",
                "8792ed73.acde78"
            ]
        ]
    },
    {
        "id": "8792ed73.acde78",
        "type": "console",
        "z": "d6d146c0.efe12",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1150,
        "y": 340,
        "wires": []
    },
    {
        "id": "45c988ad.e6461",
        "type": "comment",
        "z": "d6d146c0.efe12",
        "name": "------------USING DAVID'S ALGOLIA-------------",
        "info": "",
        "x": 1360,
        "y": 80,
        "wires": []
    }
]
